/*
 * CMutexLock.cpp
 *
 *  Created on: 2015-4-22
 *      Author: root
 */

#include "CMutexLock.h"
#include <pthread.h>

namespace rm
{

CMutexLock::CMutexLock()
{
	m_isInited = false;
	m_isLock = false;
}

CMutexLock::~CMutexLock()
{
	pthread_mutex_destroy(&m_mutex);
}

int8_t CMutexLock::Create()
{
	if (!m_isInited)
	{
		return -1;
	}

	int32_t ret = pthread_mutex_init(&m_mutex, NULL);
	if (0 != ret)
	{
		return -1;
	}
	m_isInited = true;
	return 0;
}

int8_t CMutexLock::Lock()
{
	if (!m_isLock)
	{
		return -1;
	}

	int32_t ret = pthread_mutex_lock(&m_mutex);
	if (0 != ret)
	{
		return -1;
	}
	m_isLock = true;
}

int8_t CMutexLock::UnLock()
{
	if (m_isLock)
	{
		return -1;
	}

	int32_t ret = pthread_mutex_unlock(&m_mutex);
	if (0 != ret)
	{
		return -1;
	}
	m_isLock = false;
}

CLockGuard::CLockGuard(ILock *pLock)
{
	m_pLock = pLock;
}

void CLockGuard::Lock()
{
	m_pLock->Lock();
}

void CLockGuard::Unlock()
{
	m_pLock->UnLock();
}





}
